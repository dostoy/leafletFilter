var endDate = new Date();
if (endDate.getUTCMinutes() > 30) {
    endDate.setUTCHours(endDate.getUTCHours() - 1);
} else {
    endDate.setUTCHours(endDate.getUTCHours() - 2);
}
endDate.setUTCMinutes(0, 0, 0);



var map = L.map('map', {
    zoom: 10,
    center: [38.705, 1.15],
    fullscreenControl: true,
    timeDimension: true,
    timeDimensionControl: true,    
    timeDimensionOptions: {
        timeInterval: "P3M/2017-06-30", // + endDate.toISOString(),
        period: "PT1H",
        currentTime: endDate.getTime()
    },
    timeDimensionControlOptions: {
        autoPlay: false,
        playerOptions: {
            transitionTime: 500,
            loop: true,
        }
    }
});

var Esri_WorldImagery = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, ' +
        'AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
    });

var Esri_DarkGreyCanvas = L.tileLayer(
    "http://{s}.sm.mapstack.stamen.com/" +
    "(toner-lite,$fff[difference],$fff[@23],$fff[hsl-saturation@20])/" +
    "{z}/{x}/{y}.png",
    {
        attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, ' +
        'NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'
    }
);

var baseLayers = {
    "Satellite": Esri_WorldImagery,
    "Grey Canvas": Esri_DarkGreyCanvas
};

L.control.layers(baseLayers, {}).addTo(map);
Esri_WorldImagery.addTo(map);

L.latlngGraticule({
    showLabel: true,
    weight: 0.2,
    fontColor: "#FFF", 
    color: "#caf0f3",   
    zoomInterval: {
    latitude: [
          {start: 3, end: 6, interval: 5},
          {start: 7, end: 8, interval: 1},
          {start: 9, end: 20, interval: 0.20}
        ],
    longitude: [
          {start: 3, end: 6, interval: 5},
          {start: 7, end: 8, interval: 1},
          {start: 9, end: 20, interval: 0.25}
        ]        
    }
}).addTo(map);


var testVelocityRadarLayer = L.timeDimension.layer.velocityLayer.radar({
    velocityLayerOptions: {
        particleAge: 30,
    }
});
testVelocityRadarLayer.addTo(map);

